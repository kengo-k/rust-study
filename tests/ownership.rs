#[cfg(test)]
mod tests {

    #[test]
    fn test_ownership() {
        // 数値型の代入は単純なコピーとなるため所有権の問題が発生する
        let a = 10;
        let b = a;

        // Stringは内部に可変のデータ(ヒープ領域)を持つ。
        // xをyに代入すると、xが保持するヒープ領域のポインタもyにコピーされてしまう。
        // するとxとyがヒープ領域の同じアドレスを指し示してしまう。
        // このときxが指すヒープ領域が解放されてしまうとyが指すヒープ領域も
        // 同時に無効になってします。このとき意図せず変数yを参照してしまうと
        // メモリエラーが発生する。
        // そのため同時に所有権を持つ変数がただ一つであるようにする。
        let x = String::from("world");
        let y = &x;
        println!("a: {}", a);
        println!("b: {}", b);
        println!("x: {}", x);
        println!("y: {}", y);
    }
}
